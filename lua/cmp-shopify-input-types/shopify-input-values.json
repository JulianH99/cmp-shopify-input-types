[{"value": "checkbox", "documentation": "A setting of type checkbox outputs a checkbox field. This setting type can be used for toggling features on and off, such as whether to show an announcement bar.\n ```json\n \n{\n  \"type\": \"checkbox\",\n  \"id\": \"show_announcement\",\n  \"label\": \"Show announcement\",\n  \"default\": true\n}\n \n```"}, {"value": "number", "documentation": "A setting of type number outputs a single number field. In addition to the standard attributes of an input setting, number type settings have the following attribute:\n ```json\n \n{\n  \"type\": \"number\",\n  \"id\": \"products_per_page\",\n  \"label\": \"Products per page\",\n  \"default\": 20\n}\n \n```"}, {"value": "radio", "documentation": "A setting of type radio outputs a radio option field. In addition to the standard attributes of an input setting, radio type settings have a required options attribute that accepts an array of value and label definitions.\n ```json\n \n{\n  \"type\": \"radio\",\n  \"id\": \"logo_aligment\",\n  \"label\": \"Logo alignment\",\n  \"options\": [\n    {\n      \"value\": \"left\",\n      \"label\": \"Left\"\n    },\n    {\n      \"value\": \"centered\",\n      \"label\": \"Centered\"\n    }\n  ],\n  \"default\": \"left\"\n}\n \n```"}, {"value": "range", "documentation": "A setting of type range outputs a range slider field with an input field. In addition to the standard attributes of an input setting, range type settings have the following attributes:\n ```json\n \n{\n  \"type\": \"range\",\n  \"id\": \"font_size\",\n  \"min\": 12,\n  \"max\": 24,\n  \"step\": 1,\n  \"unit\": \"px\",\n  \"label\": \"Font size\",\n  \"default\": 16\n}\n \n```"}, {"value": "select", "documentation": "A setting of type select outputs different selector fields, depending on certain criteria. In addition to the standard attributes of an input setting, select type settings have the following attributes:\n ```json\n \n{\n  \"type\": \"select\",\n  \"id\": \"vertical_alignment\",\n  \"label\": \"Vertical alignment\",\n  \"options\": [\n    {\n      \"value\": \"top\",\n      \"label\": \"Top\"\n    },\n    {\n      \"value\": \"middle\",\n      \"label\": \"Middle\"\n    },\n    {\n      \"value\": \"bottom\",\n      \"label\": \"Bottom\"\n    }\n  ],\n  \"default\": \"middle\"\n}\n \n```"}, {"value": "text", "documentation": "A setting of type text outputs a single-line text field. In addition to the standard attributes of an input setting, text type settings have the following attribute:\n ```json\n \n{\n  \"type\": \"text\",\n  \"id\": \"footer_linklist_title\",\n  \"label\": \"Heading\",\n  \"default\": \"Quick links\"\n}\n \n```"}, {"value": "textarea", "documentation": "A setting of type textarea outputs a multi-line text field. In addition to the standard attributes of an input setting, textarea type settings have the following attribute:\n ```json\n \n{\n  \"type\": \"textarea\",\n  \"id\": \"home_welcome_message\",\n  \"label\": \"Welcome message\",\n  \"default\": \"Welcome to my shop!\"\n}\n \n```"}, {"value": "article", "documentation": "A setting of type article outputs an article picker field that's automatically populated with the available articles for the store. You can use this setting type to capture an article selection, such as the article to feature on the homepage.\n ```json\n \n{\n  \"type\": \"article\",\n  \"id\": \"article\",\n  \"label\": \"Article\"\n}\n \n```"}, {"value": "blog", "documentation": "A setting of type blog outputs a blog picker field that's automatically populated with the available blogs for the store. You can use this setting type to capture a blog selection, such as the blog to feature in the sidebar.\n ```json\n \n{\n  \"type\": \"blog\",\n  \"id\": \"blog\",\n  \"label\": \"Blog\"\n}\n \n```"}, {"value": "collection", "documentation": "A setting of type collection outputs a collection picker field that's automatically populated with the available collections for the store. You can use this setting type to capture a collection selection, such as a collection for featuring products on the homepage.\n ```json\n \n{\n  \"type\": \"collection\",\n  \"id\": \"collection\",\n  \"label\": \"Collection\"\n}\n \n```"}, {"value": "collection_list", "documentation": "A setting of type collection_list outputs a collection picker field that's automatically populated with the available collections for the store. You can use this setting type to capture multiple collections, such as a group of collections to feature on the homepage.\n ```json\n \n{\n  \"type\": \"collection_list\",\n  \"id\": \"collection_list\",\n  \"label\": \"Collections\",\n  \"limit\": 8\n}\n \n```"}, {"value": "color", "documentation": "A setting of type color outputs a color picker field. You can use this setting type to capture a color selection for various theme elements, such as the body text color.\n ```json\n \n{\n  \"type\": \"color\",\n  \"id\": \"body_text\",\n  \"label\": \"Body text\",\n  \"default\": \"#000000\"\n}\n \n```"}, {"value": "color_background", "documentation": "A setting of type color_background outputs a text field for entering CSS background properties. You can use this setting type to capture background settings for various theme elements, such as the store background.\n ```json\n \n{\n  \"type\": \"color_background\",\n  \"id\": \"background\",\n  \"label\": \"Background\",\n  \"default\": \"linear-gradient(#ffffff, #000000)\"\n}\n \n```"}, {"value": "color_scheme", "documentation": "A setting of type color_scheme outputs a picker with all of the available theme color schemes, and a preview of the selected color scheme. Theme color schemes in the picker are defined using the color_scheme_group setting.\nYou can apply a color scheme to sections, blocks and general theme settings. Color scheme settings aren't supported in app blocks.\n ```json\n \n{\n    \"type\": \"color_scheme\",\n    \"id\": \"color_scheme\",\n    \"default\": \"scheme_1\",\n    \"label\": \"Color Scheme\"\n}\n \n```"}, {"value": "color_scheme_group", "documentation": "A setting of type color_scheme_group outputs a color scheme which is composed of the following input setting types:\n ```json\n \n{\n  \"type\": \"color_scheme_group\",\n  \"id\": \"color_schemes\",\n  \"definition\": [\n    {\n      \"type\": \"header\",\n      \"content\": \"Typography\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"text\",\n      \"label\": \"Text\",\n      \"default\": \"#121212\"\n    },\n    {\n      \"type\": \"header\",\n      \"content\": \"Background\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"background\",\n      \"label\": \"Background\",\n      \"default\": \"#FFFFFF\"\n    },\n    {\n      \"type\": \"color_background\",\n      \"id\": \"background_gradient\",\n      \"label\": \"Gradient\",\n      \"info\": \"Background gradient replaces background where possible.\"\n    },\n    {\n      \"type\": \"header\",\n      \"content\": \"Additional\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"primary_button\",\n      \"label\": \"Primary\",\n      \"default\": \"#121212\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"on_primary_button\",\n      \"label\": \"On Primary Button\",\n      \"default\": \"#FFFFFF\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"primary_button_border\",\n      \"label\": \"Primary Button Border\",\n      \"default\": \"#121212\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"secondary_button\",\n      \"label\": \"Secondary Button\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"on_secondary_button\",\n      \"label\": \"On Secondary Button\",\n      \"default\": \"#121212\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"secondary_button_border\",\n      \"label\": \"Secondary Button Border\",\n      \"default\": \"#FFFFFF\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"icons\",\n      \"label\": \"Icons\",\n      \"default\": \"#FFFFFF\"\n    },\n    {\n      \"type\": \"color\",\n      \"id\": \"links\",\n      \"label\": \"Links\",\n      \"default\": \"#121212\"\n    }\n  ],\n  \"role\": {\n    \"background\": {\n      \"solid\": \"background\",\n      \"gradient\": \"background_gradient\"\n    },\n    \"text\": \"text\",\n    \"primary_button\": \"primary_button\",\n    \"on_primary_button\": \"on_primary_button\",\n    \"primary_button_border\": \"primary_button_border\",\n    \"secondary_button\": \"secondary_button\",\n    \"on_secondary_button\": \"on_secondary_button\",\n    \"secondary_button_border\": \"secondary_button_border\",\n    \"icons\": \"icons\",\n    \"links\": \"links\"\n  }\n}\n \n```"}, {"value": "font_picker", "documentation": "A setting of type font_picker outputs a font picker field that's automatically populated with fonts from the Shopify font library. This library includes web-safe fonts, a selection of Google Fonts, and fonts licensed by Monotype.\n ```json\n \n{\n  \"type\": \"font_picker\",\n  \"id\": \"heading_font\",\n  \"label\": \"Heading font\",\n  \"default\": \"helvetica_n4\"\n}\n \n```"}, {"value": "html", "documentation": "A setting of type html outputs a multi-line text field that accepts HTML markup. In addition to the standard attributes of an input setting, html type settings have the following attribute:\n ```json\n \n{\n  \"type\": \"html\",\n  \"id\": \"video_embed\",\n  \"label\": \"Video embed\"\n}\n \n```"}, {"value": "image_picker", "documentation": "A setting of type image_picker outputs an image picker field that's automatically populated with the available images from the Files section of Shopify admin, and has the option to upload new images. Merchants also have an opportunity to enter alt text and select a focal point for their image.\n ```json\n \n{\n  \"type\": \"image_picker\",\n  \"id\": \"image_with_text_image\",\n  \"label\": \"Image\"\n}\n \n```"}, {"value": "inline_richtext", "documentation": "A setting of type inline_richtext outputs HTML markup that isn't wrapped in paragraph tags (<p>). The setting includes the following basic formatting options:\n ```json\n \n{\n  \"type\": \"inline_richtext\",\n  \"id\": \"inline\",\n  \"default\": \"my <i>inline</i> <b>text</b>\",\n  \"label\": \"Inline rich text\"\n}\n \n```"}, {"value": "link_list", "documentation": "A setting of type link_list outputs a menu picker field that's automatically populated with the available menus for the store. You can use this setting type to capture a menu selection, such as the menu to use for footer links.\n ```json\n \n{\n  \"type\": \"link_list\",\n  \"id\": \"menu\",\n  \"label\": \"Menu\"\n}\n \n```"}, {"value": "liquid", "documentation": "A setting of type liquid outputs a multi-line text field that accepts HTML and limited Liquid markup. You can use this setting type to capture custom blocks of HTML and Liquid content, such as a product-specific message. Merchants can also use a liquid setting to add the code needed to integrate certain types of apps into your theme.\n ```json\n \n{\n  \"type\": \"liquid\",\n  \"id\": \"battery_message\",\n  \"label\": \"Battery message\",\n  \"default\": \"{% if product.tags contains 'battery' %}This product can only be shipped by ground.{% else %}This product can be shipped by ground or air.{% endif %}\"\n}\n \n```"}, {"value": "metaobject", "documentation": "A metaobject setting allows merchants to select metaobject entries of a designated type through a picker interface. This setting supports both standard and custom metaobject definitions:\n ```json\n \n{\n  \"type\": \"metaobject\",\n  \"id\": \"my_material_setting\",\n  \"label\": \"Material\",\n  \"metaobject_type\": \"shopify--material\"\n}\n \n```"}, {"value": "metaobject_list", "documentation": "A metaobject_list setting allows merchants to select multiple metaobject entries of a designated type through a picker interface. This setting supports both standard and custom metaobject definitions:\n ```json\n \n{\n  \"type\": \"metaobject_list\",\n  \"id\": \"my_material_list_setting\",\n  \"label\": \"Materials\",\n  \"metaobject_type\": \"shopify--material\",\n  \"limit\": 12\n}\n \n```"}, {"value": "page", "documentation": "A setting of type page outputs a page picker field that's automatically populated with the available pages for the store. You can use this setting type to capture a page selection, such as the page to feature content for in a size-chart display.\n ```json\n \n{\n  \"type\": \"page\",\n  \"id\": \"page\",\n  \"label\": \"Page\"\n}\n \n```"}, {"value": "product", "documentation": "A setting of type product outputs a product picker field that's automatically populated with the available products for the store. You can use this setting type to capture a product selection, such as the product to feature on the homepage.\n ```json\n \n{\n  \"type\": \"product\",\n  \"id\": \"product\",\n  \"label\": \"Product\"\n}\n \n```"}, {"value": "product_list", "documentation": "A setting of type product_list outputs a product picker field that's automatically populated with the available products for the store. You can use this setting type to capture multiple products, such as a group of products to feature on the homepage.\n ```json\n \n{\n  \"type\": \"product_list\",\n  \"id\": \"product_list\",\n  \"label\": \"Products\",\n  \"limit\": 12\n}\n \n```"}, {"value": "richtext", "documentation": "A setting of type richtext outputs a multi-line text field with the following basic formatting options:\n ```json\n \n{\n  \"type\": \"richtext\",\n  \"id\": \"paragraph\",\n  \"label\": \"Paragraph\"\n}\n \n```"}, {"value": "text_alignment", "documentation": "A setting of type text_alignment outputs a SegmentedControl field with icons. In addition to the standard attributes of an input setting, text_alignment type settings support the following attribute:\n ```json\n \n{\n   \"type\": \"text_alignment\",\n   \"id\": \"alignment\",\n   \"label\": \"Text alignment\",\n   \"default\": \"center\"\n}\n\n \n```"}, {"value": "url", "documentation": "A setting of type url outputs a URL entry field where you can manually enter external URLs and relative paths. It also has a picker that's automatically populated with the following available resources for the shop:\n ```json\n \n{\n  \"type\": \"url\",\n  \"id\": \"button_link\",\n  \"label\": \"Button link\"\n}\n \n```"}, {"value": "video", "documentation": "A setting of type video outputs a video picker that's automatically populated with the available videos from the Files section of the Shopify admin. The merchant also has the option to upload new videos.\n ```json\n \n{\n  \"type\": \"video\",\n  \"id\": \"video\",\n  \"label\": \"A Shopify-hosted video\"\n}\n \n```"}, {"value": "video_url", "documentation": "A setting of type video_url outputs a URL entry field. In addition to the standard attributes of an input setting, video_url type settings have the following attributes:\n ```json\n \n{\n  \"type\": \"video_url\",\n  \"id\": \"product_description_video\",\n  \"label\": \"Product description video\",\n  \"accept\": [\n    \"youtube\",\n    \"vimeo\"\n  ]\n}\n \n```"}]